{"version":3,"sources":["helpers.js","Bullet.js","Particle.js","Ship.js","Asteroid.js","Reacteroids.js","index.js"],"names":["rotatePoint","p","center","angle","x","Math","cos","y","sin","randomNumBetween","min","max","random","randomNumBetweenExcluding","exMin","exMax","Bullet","args","posDelta","ship","rotation","PI","this","position","velocity","radius","delete","state","screen","width","height","destroy","context","save","translate","rotate","fillStyle","lineWidth","beginPath","arc","closePath","fill","restore","Particle","size","lifeSpan","inertia","moveTo","Ship","rotationSpeed","speed","lastShot","create","onDie","i","particle","dir","val","keys","up","accelerate","left","right","space","Date","now","bullet","strokeStyle","lineTo","stroke","Asteroid","score","addScore","vertices","count","rad","round","asteroidVertices","asteroid","bind","length","KEY","Reacteroids","window","innerWidth","innerHeight","ratio","devicePixelRatio","down","asteroidCount","currentScore","topScore","localStorage","inGame","asteroids","bullets","particles","value","e","setState","keyCode","addEventListener","handleKeys","handleResize","refs","canvas","getContext","startGame","requestAnimationFrame","update","removeEventListener","scale","globalAlpha","fillRect","generateAsteroids","checkCollisionsWith","updateObjects","points","createObject","gameOver","howMany","item","group","push","items","index","splice","render","items1","items2","b","a","item1","item2","checkCollision","obj1","obj2","vx","vy","sqrt","endgame","message","className","onClick","ref","Component","document","getElementById"],"mappings":"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","file":"static/js/main.4f937171.chunk.js","sourcesContent":["// From: http://codepen.io/bungu/pen/rawvJe\r\n\r\n/**\r\n * Generates vertices for asteroid polygon with certain count and radius\r\n * @param  {Number} count   Number of vertices\r\n * @param  {Number} rad     Maximal radius of polygon\r\n * @return {Array}        Array of vertices: {x: Number, y: Number}\r\n */\r\nexport function asteroidVertices(count, rad) {\r\n  let p = [];\r\n  for (let i = 0; i < count; i++) {\r\n    p[i] = {\r\n      x: (-Math.sin((360/count)*i*Math.PI/180) + Math.round(Math.random()*2-1)*Math.random()/3)*rad,\r\n      y: (-Math.cos((360/count)*i*Math.PI/180) + Math.round(Math.random()*2-1)*Math.random()/3)*rad\r\n    };\r\n  }\r\n  return p;\r\n};\r\n\r\n/**\r\n * Rotate point around center on certain angle\r\n * @param {Object} p        {x: Number, y: Number}\r\n * @param {Object} center   {x: Number, y: Number}\r\n * @param {Number} angle    Angle in radians\r\n */\r\nexport function rotatePoint(p, center, angle) {\r\n  return {\r\n    x: ((p.x-center.x)*Math.cos(angle) - (p.y-center.y)*Math.sin(angle)) + center.x,\r\n    y: ((p.x-center.x)*Math.sin(angle) + (p.y-center.y)*Math.cos(angle)) + center.y\r\n  };\r\n};\r\n\r\n/**\r\n * Random Number between 2 numbers\r\n */\r\nexport function randomNumBetween(min, max) {\r\n  return Math.random() * (max - min + 1) + min;\r\n};\r\n\r\n/**\r\n * Random Number between 2 numbers excluding a certain range\r\n */\r\nexport function randomNumBetweenExcluding(min, max, exMin, exMax) {\r\n  let random = randomNumBetween(min, max);\r\n  while (random > exMin && random < exMax) {\r\n    random = Math.random() * (max - min + 1) + min;\r\n  }\r\n  return random;\r\n};\r\n","import { rotatePoint } from './helpers';\r\n\r\nexport default class Bullet {\r\n  constructor(args) {\r\n    let posDelta = rotatePoint({x:0, y:-20}, {x:0,y:0}, args.ship.rotation * Math.PI / 180);\r\n    this.position = {\r\n      x: args.ship.position.x + posDelta.x,\r\n      y: args.ship.position.y + posDelta.y\r\n    };\r\n    this.rotation = args.ship.rotation;\r\n    this.velocity = {\r\n      x:posDelta.x / 2,\r\n      y:posDelta.y / 2\r\n    };\r\n    this.radius = 2;\r\n  }\r\n\r\n  destroy(){\r\n    this.delete = true;\r\n  }\r\n\r\n  render(state){\r\n    // Move\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n\r\n    // Delete if it goes out of bounds\r\n    if ( this.position.x < 0\r\n      || this.position.y < 0\r\n      || this.position.x > state.screen.width\r\n      || this.position.y > state.screen.height ) {\r\n        this.destroy();\r\n    }\r\n\r\n    // Draw\r\n    const context = state.context;\r\n    context.save();\r\n    context.translate(this.position.x, this.position.y);\r\n    context.rotate(this.rotation * Math.PI / 180);\r\n    context.fillStyle = '#FFF';\r\n    context.lineWidth = 0.10;\r\n    context.beginPath();\r\n    context.arc(0, 0, 2, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    context.restore();\r\n  }\r\n}\r\n","export default class Particle {\r\n  constructor(args) {\r\n    this.position = args.position\r\n    this.velocity = args.velocity\r\n    this.radius = args.size;\r\n    this.lifeSpan = args.lifeSpan;\r\n    this.inertia = 0.98;\r\n  }\r\n\r\n  destroy(){\r\n    this.delete = true;\r\n  }\r\n\r\n  render(state){\r\n    // Move\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n    this.velocity.x *= this.inertia;\r\n    this.velocity.y *= this.inertia;\r\n\r\n    // Shrink\r\n    this.radius -= 0.1;\r\n    if(this.radius < 0.1) {\r\n      this.radius = 0.1;\r\n    }\r\n    if(this.lifeSpan-- < 0){\r\n      this.destroy()\r\n    }\r\n\r\n    // Draw\r\n    const context = state.context;\r\n    context.save();\r\n    context.translate(this.position.x, this.position.y);\r\n    context.fillStyle = '#ffffff';\r\n    context.lineWidth = 2;\r\n    context.beginPath();\r\n    context.moveTo(0, -this.radius);\r\n    context.arc(0, 0, this.radius, 0, 2 * Math.PI);\r\n    context.closePath();\r\n    context.fill();\r\n    context.restore();\r\n  }\r\n}\r\n","import Bullet from './Bullet';\r\nimport Particle from './Particle';\r\nimport { rotatePoint, randomNumBetween } from './helpers';\r\n\r\nexport default class Ship {\r\n  constructor(args) {\r\n    this.position = args.position\r\n    this.velocity = {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n    this.rotation = 0;\r\n    this.rotationSpeed = 6;\r\n    this.speed = 0.15;\r\n    this.inertia = 0.99;\r\n    this.radius = 20;\r\n    this.lastShot = 0;\r\n    this.create = args.create;\r\n    this.onDie = args.onDie;\r\n  }\r\n\r\n  destroy(){\r\n    this.delete = true;\r\n    this.onDie();\r\n\r\n    // Explode\r\n    for (let i = 0; i < 60; i++) {\r\n      const particle = new Particle({\r\n        lifeSpan: randomNumBetween(60, 100),\r\n        size: randomNumBetween(1, 4),\r\n        position: {\r\n          x: this.position.x + randomNumBetween(-this.radius/4, this.radius/4),\r\n          y: this.position.y + randomNumBetween(-this.radius/4, this.radius/4)\r\n        },\r\n        velocity: {\r\n          x: randomNumBetween(-1.5, 1.5),\r\n          y: randomNumBetween(-1.5, 1.5)\r\n        }\r\n      });\r\n      this.create(particle, 'particles');\r\n    }\r\n  }\r\n\r\n  rotate(dir){\r\n    if (dir == 'LEFT') {\r\n      this.rotation -= this.rotationSpeed;\r\n    }\r\n    if (dir == 'RIGHT') {\r\n      this.rotation += this.rotationSpeed;\r\n    }\r\n  }\r\n\r\n  accelerate(val){\r\n    this.velocity.x -= Math.sin(-this.rotation*Math.PI/180) * this.speed;\r\n    this.velocity.y -= Math.cos(-this.rotation*Math.PI/180) * this.speed;\r\n\r\n    // Thruster particles\r\n    let posDelta = rotatePoint({x:0, y:-10}, {x:0,y:0}, (this.rotation-180) * Math.PI / 180);\r\n    const particle = new Particle({\r\n      lifeSpan: randomNumBetween(20, 40),\r\n      size: randomNumBetween(1, 3),\r\n      position: {\r\n        x: this.position.x + posDelta.x + randomNumBetween(-2, 2),\r\n        y: this.position.y + posDelta.y + randomNumBetween(-2, 2)\r\n      },\r\n      velocity: {\r\n        x: posDelta.x / randomNumBetween(3, 5),\r\n        y: posDelta.y / randomNumBetween(3, 5)\r\n      }\r\n    });\r\n    this.create(particle, 'particles');\r\n  }\r\n\r\n  render(state){\r\n    // Controls\r\n    if(state.keys.up){\r\n      this.accelerate(1);\r\n    }\r\n    if(state.keys.left){\r\n      this.rotate('LEFT');\r\n    }\r\n    if(state.keys.right){\r\n      this.rotate('RIGHT');\r\n    }\r\n    if(state.keys.space && Date.now() - this.lastShot > 300){\r\n      const bullet = new Bullet({ship: this});\r\n      this.create(bullet, 'bullets');\r\n      this.lastShot = Date.now();\r\n    }\r\n\r\n    // Move\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n    this.velocity.x *= this.inertia;\r\n    this.velocity.y *= this.inertia;\r\n\r\n    // Rotation\r\n    if (this.rotation >= 360) {\r\n      this.rotation -= 360;\r\n    }\r\n    if (this.rotation < 0) {\r\n      this.rotation += 360;\r\n    }\r\n\r\n    // Screen edges\r\n    if(this.position.x > state.screen.width) this.position.x = 0;\r\n    else if(this.position.x < 0) this.position.x = state.screen.width;\r\n    if(this.position.y > state.screen.height) this.position.y = 0;\r\n    else if(this.position.y < 0) this.position.y = state.screen.height;\r\n\r\n    // Draw\r\n    const context = state.context;\r\n    context.save();\r\n    context.translate(this.position.x, this.position.y);\r\n    context.rotate(this.rotation * Math.PI / 180);\r\n    context.strokeStyle = '#ffffff';\r\n    context.fillStyle = '#000000';\r\n    context.lineWidth = 2;\r\n    context.beginPath();\r\n    context.moveTo(0, -15);\r\n    context.lineTo(10, 10);\r\n    context.lineTo(5, 7);\r\n    context.lineTo(-5, 7);\r\n    context.lineTo(-10, 10);\r\n    context.closePath();\r\n    context.fill();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import Particle from './Particle';\r\nimport { asteroidVertices, randomNumBetween } from './helpers';\r\n\r\nexport default class Asteroid {\r\n  constructor(args) {\r\n    this.position = args.position\r\n    this.velocity = {\r\n      x: randomNumBetween(-1.5, 1.5),\r\n      y: randomNumBetween(-1.5, 1.5)\r\n    }\r\n    this.rotation = 0;\r\n    this.rotationSpeed = randomNumBetween(-1, 1)\r\n    this.radius = args.size;\r\n    this.score = (80/this.radius)*5;\r\n    this.create = args.create;\r\n    this.addScore = args.addScore;\r\n    this.vertices = asteroidVertices(8, args.size)\r\n  }\r\n\r\n  destroy(){\r\n    this.delete = true;\r\n    this.addScore(this.score);\r\n\r\n    // Explode\r\n    for (let i = 0; i < this.radius; i++) {\r\n      const particle = new Particle({\r\n        lifeSpan: randomNumBetween(60, 100),\r\n        size: randomNumBetween(1, 3),\r\n        position: {\r\n          x: this.position.x + randomNumBetween(-this.radius/4, this.radius/4),\r\n          y: this.position.y + randomNumBetween(-this.radius/4, this.radius/4)\r\n        },\r\n        velocity: {\r\n          x: randomNumBetween(-1.5, 1.5),\r\n          y: randomNumBetween(-1.5, 1.5)\r\n        }\r\n      });\r\n      this.create(particle, 'particles');\r\n    }\r\n\r\n    // Break into smaller asteroids\r\n    if(this.radius > 10){\r\n      for (let i = 0; i < 2; i++) {\r\n        let asteroid = new Asteroid({\r\n\r\n          size: this.radius/2,\r\n          position: {\r\n            x: randomNumBetween(-10, 20)+this.position.x,\r\n            y: randomNumBetween(-10, 20)+this.position.y\r\n          },\r\n          create: this.create.bind(this),\r\n          addScore: this.addScore.bind(this)\r\n        });\r\n        this.create(asteroid, 'asteroids');\r\n      }\r\n    }\r\n  }\r\n\r\n  render(state){\r\n    // Move\r\n    this.position.x += this.velocity.x;\r\n    this.position.y += this.velocity.y;\r\n\r\n    // Rotation\r\n    this.rotation += this.rotationSpeed;\r\n    if (this.rotation >= 360) {\r\n      this.rotation -= 360;\r\n    }\r\n    if (this.rotation < 0) {\r\n      this.rotation += 360;\r\n    }\r\n\r\n    // Screen edges\r\n    if(this.position.x > state.screen.width + this.radius) this.position.x = -this.radius;\r\n    else if(this.position.x < -this.radius) this.position.x = state.screen.width + this.radius;\r\n    if(this.position.y > state.screen.height + this.radius) this.position.y = -this.radius;\r\n    else if(this.position.y < -this.radius) this.position.y = state.screen.height + this.radius;\r\n\r\n    // Draw\r\n    const context = state.context;\r\n    context.save();\r\n    context.translate(this.position.x, this.position.y);\r\n    context.rotate(this.rotation * Math.PI / 180);\r\n    context.strokeStyle = '#FFF';\r\n    context.lineWidth = 2;\r\n    context.beginPath();\r\n    context.moveTo(0, -this.radius);\r\n    for (let i = 1; i < this.vertices.length; i++) {\r\n      context.lineTo(this.vertices[i].x, this.vertices[i].y);\r\n    }\r\n    context.closePath();\r\n    context.stroke();\r\n    context.restore();\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Ship from './Ship';\r\nimport Asteroid from './Asteroid';\r\nimport { randomNumBetweenExcluding } from './helpers'\r\n\r\nconst KEY = {\r\n  LEFT:  37,\r\n  RIGHT: 39,\r\n  UP: 38,\r\n  A: 65,\r\n  D: 68,\r\n  W: 87,\r\n  SPACE: 32\r\n};\r\n\r\nexport class Reacteroids extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      screen: {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        ratio: window.devicePixelRatio || 1,\r\n      },\r\n      context: null,\r\n      keys : {\r\n        left  : 0,\r\n        right : 0,\r\n        up    : 0,\r\n        down  : 0,\r\n        space : 0,\r\n      },\r\n      asteroidCount: 3,\r\n      currentScore: 0,\r\n      topScore: localStorage['topscore'] || 0,\r\n      inGame: false\r\n    }\r\n    this.ship = [];\r\n    this.asteroids = [];\r\n    this.bullets = [];\r\n    this.particles = [];\r\n  }\r\n\r\n  handleResize(value, e){\r\n    this.setState({\r\n      screen : {\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        ratio: window.devicePixelRatio || 1,\r\n      }\r\n    });\r\n  }\r\n\r\n  handleKeys(value, e){\r\n    let keys = this.state.keys;\r\n    if(e.keyCode === KEY.LEFT   || e.keyCode === KEY.A) keys.left  = value;\r\n    if(e.keyCode === KEY.RIGHT  || e.keyCode === KEY.D) keys.right = value;\r\n    if(e.keyCode === KEY.UP     || e.keyCode === KEY.W) keys.up    = value;\r\n    if(e.keyCode === KEY.SPACE) keys.space = value;\r\n    this.setState({\r\n      keys : keys\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keyup',   this.handleKeys.bind(this, false));\r\n    window.addEventListener('keydown', this.handleKeys.bind(this, true));\r\n    window.addEventListener('resize',  this.handleResize.bind(this, false));\r\n\r\n    const context = this.refs.canvas.getContext('2d');\r\n    this.setState({ context: context });\r\n    this.startGame();\r\n    requestAnimationFrame(() => {this.update()});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keyup', this.handleKeys);\r\n    window.removeEventListener('keydown', this.handleKeys);\r\n    window.removeEventListener('resize', this.handleResize);\r\n  }\r\n\r\n  update() {\r\n    const context = this.state.context;\r\n    const keys = this.state.keys;\r\n    const ship = this.ship[0];\r\n\r\n    context.save();\r\n    context.scale(this.state.screen.ratio, this.state.screen.ratio);\r\n\r\n    // Motion trail\r\n    context.fillStyle = '#000';\r\n    context.globalAlpha = 0.4;\r\n    context.fillRect(0, 0, this.state.screen.width, this.state.screen.height);\r\n    context.globalAlpha = 1;\r\n\r\n    // Next set of asteroids\r\n    if(!this.asteroids.length){\r\n      let count = this.state.asteroidCount + 1;\r\n      this.setState({ asteroidCount: count });\r\n      this.generateAsteroids(count)\r\n    }\r\n\r\n    // Check for colisions\r\n    this.checkCollisionsWith(this.bullets, this.asteroids);\r\n    this.checkCollisionsWith(this.ship, this.asteroids);\r\n\r\n    // Remove or render\r\n    this.updateObjects(this.particles, 'particles')\r\n    this.updateObjects(this.asteroids, 'asteroids')\r\n    this.updateObjects(this.bullets, 'bullets')\r\n    this.updateObjects(this.ship, 'ship')\r\n\r\n    context.restore();\r\n\r\n    // Next frame\r\n    requestAnimationFrame(() => {this.update()});\r\n  }\r\n\r\n  addScore(points){\r\n    if(this.state.inGame){\r\n      this.setState({\r\n        currentScore: this.state.currentScore + points,\r\n      });\r\n    }\r\n  }\r\n\r\n  startGame(){\r\n    this.setState({\r\n      inGame: true,\r\n      currentScore: 0,\r\n    });\r\n\r\n    // Make ship\r\n    let ship = new Ship({\r\n      position: {\r\n        x: this.state.screen.width/2,\r\n        y: this.state.screen.height/2\r\n      },\r\n      create: this.createObject.bind(this),\r\n      onDie: this.gameOver.bind(this)\r\n    });\r\n    this.createObject(ship, 'ship');\r\n\r\n    // Make asteroids\r\n    this.asteroids = [];\r\n    this.generateAsteroids(this.state.asteroidCount)\r\n  }\r\n\r\n  gameOver(){\r\n    this.setState({\r\n      inGame: false,\r\n    });\r\n\r\n    // Replace top score\r\n    if(this.state.currentScore > this.state.topScore){\r\n      this.setState({\r\n        topScore: this.state.currentScore,\r\n      });\r\n      localStorage['topscore'] = this.state.currentScore;\r\n    }\r\n  }\r\n\r\n  generateAsteroids(howMany){\r\n    let asteroids = [];\r\n    let ship = this.ship[0];\r\n    for (let i = 0; i < howMany; i++) {\r\n      let asteroid = new Asteroid({\r\n        size: 80,\r\n        position: {\r\n          x: randomNumBetweenExcluding(0, this.state.screen.width, ship.position.x-60, ship.position.x+60),\r\n          y: randomNumBetweenExcluding(0, this.state.screen.height, ship.position.y-60, ship.position.y+60)\r\n        },\r\n        create: this.createObject.bind(this),\r\n        addScore: this.addScore.bind(this)\r\n      });\r\n      this.createObject(asteroid, 'asteroids');\r\n    }\r\n  }\r\n\r\n  createObject(item, group){\r\n    this[group].push(item);\r\n  }\r\n\r\n  updateObjects(items, group){\r\n    let index = 0;\r\n    for (let item of items) {\r\n      if (item.delete) {\r\n        this[group].splice(index, 1);\r\n      }else{\r\n        items[index].render(this.state);\r\n      }\r\n      index++;\r\n    }\r\n  }\r\n\r\n  checkCollisionsWith(items1, items2) {\r\n    var a = items1.length - 1;\r\n    var b;\r\n    for(a; a > -1; --a){\r\n      b = items2.length - 1;\r\n      for(b; b > -1; --b){\r\n        var item1 = items1[a];\r\n        var item2 = items2[b];\r\n        if(this.checkCollision(item1, item2)){\r\n          item1.destroy();\r\n          item2.destroy();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkCollision(obj1, obj2){\r\n    var vx = obj1.position.x - obj2.position.x;\r\n    var vy = obj1.position.y - obj2.position.y;\r\n    var length = Math.sqrt(vx * vx + vy * vy);\r\n    if(length < obj1.radius + obj2.radius){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    let endgame;\r\n    let message;\r\n\r\n    if (this.state.currentScore <= 0) {\r\n      message = '0 points... Try again';\r\n    } else if (this.state.currentScore >= this.state.topScore){\r\n      message = 'Top score with ' + this.state.currentScore + ' points. WoW!';\r\n    } else {\r\n      message = this.state.currentScore + ' Points though :)'\r\n    }\r\n\r\n    if(!this.state.inGame){\r\n      endgame = (\r\n        <div className=\"endgame\">\r\n          <p>Game over</p>\r\n          <p>{message}</p>\r\n          <button\r\n            onClick={ this.startGame.bind(this) }>\r\n            try again?\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { endgame }\r\n        <span className=\"score current-score\" >Score: {this.state.currentScore}</span>\r\n        <span className=\"score top-score\" >Top Score: {this.state.topScore}</span>\r\n        <span className=\"controls\" >\r\n          Use [A][S][W][D] or [←][↑][↓][→] to MOVE<br/>\r\n          Use [SPACE] to SHOOT\r\n        </span>\r\n        <canvas ref=\"canvas\"\r\n          width={this.state.screen.width * this.state.screen.ratio}\r\n          height={this.state.screen.height * this.state.screen.ratio}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Reacteroids } from './Reacteroids';\nimport style from './style.css';\n\nrender(<Reacteroids />, document.getElementById('root'));\n"],"sourceRoot":""}